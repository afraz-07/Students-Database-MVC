@model IEnumerable<Project_College.Student>

@{
    ViewBag.Title = "Read";
    
}

<head>
    <link href="~/Content/bootstrap.min.css" rel="stylesheet" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css">
</head>


<h2 class="mt-4 mb-4">Student Records</h2>

<div class="container-fluid" style="padding:0 0 20px 0; ">
    <form class="d-flex">
        <input class="form-control me-2" name="searchtxt" type="search" placeholder="Search" aria-label="Search">
        <button class="btn btn-outline-success" type="submit"><i class="fas fa-search"></i> Search</button>

        @Html.ActionLink("Sort List", "Read", "Home", new { SortOrder = ViewBag.SortOrder == null ? "Asc" : (ViewBag.SortOrder == "Asc" ? "Desc" : "Asc") }, new { @class = "btn btn-outline-primary ms-2" })
    </form>
</div>

<table class="table table-bordered table-striped block-center d-block " width="100%">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.Name)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.DOB)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Gender)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.MobileNumber)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Email)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.HSC_Percentage)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Department)
        </th>
        <th style="text-align:center">Edit</th>
        <th style="text-align:center">Details</th>
        <th style="text-align:center">Delete</th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Name)
            </td>
            <td width="450px">
                @Html.DisplayFor(modelItem => item.DOB)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Gender)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.MobileNumber)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Email)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.HSC_Percentage)
            </td>
            <td width="300px">
                @Html.DisplayFor(modelItem => item.Department.Departments)
            </td>
            <td width="200px" style="text-align:center">
                @Html.ActionLink("  Edit", "Edit", new { id = item.Id }, new { @class = "btn btn-primary" })
            </td>
            <td width="200px" style="text-align:center">
                @Html.ActionLink("Details", "Details", new { id = item.Id }, new { @class = "btn btn-success" })
            </td>
            <td width="200px" style="text-align:center">
                @Html.ActionLink("Delete", "Delete", new { id = item.Id }, new { @class = "btn btn-danger" })
            </td>
        </tr>
    }

</table>

@{
    double pages = ViewBag.Ttlpgs;

    <ul class="pagination d-inline-flex">
        @if (ViewBag.PageNumber == 1)
        {
            <li class="buttons-2">
                @Html.ActionLink("Prev", "Read", new { SortOrder = ViewBag.SortOrder == null ? "Asc" : ViewBag.SortOrder, Pgnumber = ViewBag.PageNumber }, new { @class = "btn btn-default" })
            </li>
        }
        else
        {
            <li class="buttons-2">
                @Html.ActionLink("Prev", "Read", new { SortOrder = ViewBag.SortOrder == null ? "Asc" : ViewBag.SortOrder, Pgnumber = ViewBag.PageNumber - 1 }, new { @class = "btn btn-default" })
            </li>
        }


        @for (int i = 1; i <= pages; i++)
        {

            if (i == ViewBag.PageNumber)
            {
                <li class="buttons">
                    @Html.ActionLink(i.ToString(), "Read", new { SortOrder = ViewBag.SortOrder == null ? "Asc" : ViewBag.SortOrder, Pgnumber = i }, new { @class = "btn btn-default" })
                </li>
            }
            else
            {
                <li class="buttons-2">
                    @Html.ActionLink(i.ToString(), "Read", new { SortOrder = ViewBag.SortOrder == null ? "Asc" : ViewBag.SortOrder, Pgnumber = i }, new { @class = "btn btn-default" })
                </li>
            }

        }

        @if (ViewBag.PageNumber == pages)
        {
            <li class="buttons-2">
                @Html.ActionLink("Next", "Read", new { SortOrder = ViewBag.SortOrder == null ? "Asc" : ViewBag.SortOrder, Pgnumber = ViewBag.PageNumber }, new { @class = "btn btn-default" })
            </li>
        }
        else
        {
            <li class="buttons-2">
                @Html.ActionLink("Next", "Read", new { SortOrder = ViewBag.SortOrder == null ? "Asc" : ViewBag.SortOrder, Pgnumber = ViewBag.PageNumber + 1 }, new { @class = "btn btn-default" })
            </li>
        }

    </ul>
}

<style>
    .container {
        margin: 0;
        padding: 0;
        width: 100%;
    }

    .body-content {
        margin: 0;
        margin-left: 7%;
    }

    .buttons {
        background-color: gray;
        color: white;
        border-radius: 3px;
        border: 1px solid black;
        margin-left: 7px;
    }

    .buttons-2 {
        border: 1px solid black;
        border-radius: 3px;
        margin-left: 7px;
    }

    .pagination {
        display: flex;
    }
</style>


